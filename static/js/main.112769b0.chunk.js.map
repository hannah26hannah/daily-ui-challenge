{"version":3,"sources":["components/DayCard.js","utils/index.js","views/Main/index.js","App.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","useStyles","makeStyles","root","minWidth","margin","spacing","bullet","display","transform","title","fontSize","pos","marginBottom","buttonArea","justifyContent","DayCard","stringDate","challenge","index","classes","html_url","images","published_at","tags","console","log","Card","className","CardContent","Typography","color","gutterBottom","src","teaser","alt","substring","CardActions","Button","size","variant","href","Main","useState","data","setData","loading","setLoading","setError","api","process","useEffect","axios","then","res","catch","err","finally","Container","maxWidth","Grid","container","map","datum","item","xs","sm","md","lg","xl","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAWMA,EAAQC,cACRC,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,IACVC,OAAQN,EAAMO,QAAQ,IAExBC,OAAQ,CACNC,QAAS,eACTH,OAAQ,QACRI,UAAW,cAEbC,MAAO,CACLC,SAAU,IAEZC,IAAK,CACHC,aAAc,IAEhBC,WAAY,CACVC,eAAgB,YAsCLC,EAlCC,SAAC,GAA0B,ICjCVC,EDiCdC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MACtBC,EAAUnB,IACRoB,EAAgDH,EAAhDG,SAAUC,EAAsCJ,EAAtCI,OAAQC,EAA8BL,EAA9BK,aAAcC,EAAgBN,EAAhBM,KAAMd,EAAUQ,EAAVR,MAG9C,OAFAe,QAAQC,IAAI,OAAQF,GAGlB,eAACG,EAAA,EAAD,CAAMC,UAAWR,EAAQjB,KAAzB,UACE,eAAC0B,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CACEF,UAAWR,EAAQV,MACnBqB,MAAM,gBACNC,cAAY,EAHd,iBAKOb,EALP,MAKiBT,KAEhBY,GAAU,qBAAKW,IAAKX,EAAOY,OAAQC,IAAKzB,IAEzC,cAACoB,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,EAA9C,UClDyBf,EDmDLM,EClDnBN,EAAWmB,UAAU,EAAG,UDqD3B,eAACC,EAAA,EAAD,CAAaT,UAAWR,EAAQN,WAAhC,UACE,cAACwB,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAAQ,WAA7B,0BAIA,cAACF,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAAQ,WAAWC,KAAMpB,EAA9C,iC,iBEnBOqB,EAnCF,WAAO,IAAD,EACOC,mBAAS,MADhB,mBACVC,EADU,KACJC,EADI,OAEaF,oBAAS,GAFtB,mBAEVG,EAFU,KAEDC,EAFC,OAGSJ,mBAAS,MAHlB,mBAGHK,GAHG,WAKXC,EAAG,8DADKC,oEAkBd,OAfAC,qBAAU,WACRC,IAAMH,GACHI,MAAK,SAAAC,GACJT,EAAQS,EAAIV,SAEbW,OAAM,SAAAC,GACL/B,QAAQC,IAAI,wBAAyB8B,GACrCR,EAASQ,MAEVC,SAAQ,WACPV,GAAW,MAEftB,QAAQC,IAAI,UAAWoB,KACtB,IAGD,cAACY,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAACC,EAAA,EAAD,CAAMC,WAAS,EAAf,SACGjB,GACCA,EAAKkB,KAAI,SAACC,EAAO5C,GAAR,OACP,cAACyC,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA3C,SACE,cAAC,EAAD,CAASnD,UAAW6C,EAAO5C,MAAOA,KADe4C,EAAMO,YC1BtDC,MAJf,WACE,OAAO,cAAC,EAAD,KCSMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.112769b0.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Typography\n} from \"@material-ui/core\";\nimport { createMuiTheme, makeStyles } from \"@material-ui/core/styles\";\nimport { spliceDateString } from \"../utils/index\";\n\nconst theme = createMuiTheme();\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    margin: theme.spacing(2)\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  buttonArea: {\n    justifyContent: \"center\"\n  }\n});\n\nconst DayCard = ({ challenge, index }) => {\n  const classes = useStyles();\n  const { html_url, images, published_at, tags, title } = challenge;\n  console.log(\"tags\", tags);\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography\n          className={classes.title}\n          color=\"textSecondary\"\n          gutterBottom\n        >\n          Day {index} : {title}\n        </Typography>\n        {images && <img src={images.teaser} alt={title} />}\n\n        <Typography color=\"textSecondary\" gutterBottom>\n          {spliceDateString(published_at)}\n        </Typography>\n      </CardContent>\n      <CardActions className={classes.buttonArea}>\n        <Button size=\"small\" variant=\"outlined\">\n          See the code\n        </Button>\n        {/* TODO: should upload real code. have to install react-router */}\n        <Button size=\"small\" variant=\"outlined\" href={html_url}>\n          Open Dribble\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default DayCard;\n","export function spliceDateString(stringDate) {\n  return stringDate.substring(0, 10);\n}\n","import React, { useState, useEffect } from \"react\"\nimport { Container, Grid } from \"@material-ui/core\"\nimport DayCard from \"../../components/DayCard\"\nimport axios from \"axios\"\n\nconst Main = () => {\n  const [data, setData] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const TOKEN = process.env.REACT_APP_API_TOKEN\n  const api = `https://api.dribbble.com/v2/user/shots?access_token=${TOKEN}`\n\n  useEffect(() => {\n    axios(api)\n      .then(res => {\n        setData(res.data)\n      })\n      .catch(err => {\n        console.log(\"Error fetching data: \", err)\n        setError(err)\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n    console.log(\"loading\", loading)\n  }, [])\n\n  return (\n    <Container maxWidth=\"md\">\n      <Grid container>\n        {data &&\n          data.map((datum, index) => (\n            <Grid item xs={6} sm={6} md={6} lg={6} xl={4} key={datum.id}>\n              <DayCard challenge={datum} index={index} />\n            </Grid>\n          ))}\n      </Grid>\n    </Container>\n  )\n}\nexport default Main\n","import Main from \"./views/Main\";\n\nfunction App() {\n  return <Main />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}